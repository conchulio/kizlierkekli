.page-header
  / = link_to apartments_path, :class => 'btn btn-default' do 
  /   span.glyphicon.glyphicon-list-alt
  /   |  Back 
  = link_to edit_apartment_path(@apartment), :class => 'btn btn-primary' do 
    span.glyphicon.glyphicon-pencil
    |  Edit 
  h1
    | Show apartment
    - if user_signed_in?
      |&nbsp;
      / IMPORTANT: On success hide this form and show the other one
      - if !@is_favorite
        - hideAdd = ''
        - hideRemove = 'hidden'
      - else
        - hideAdd = 'hidden'
        - hideRemove = ''
      = form_for(@favorite,\
          url: {controller: 'favorites', action: 'create'},\
          :html => {\
            class: "form-favorite form-invisibile form-add-favorite #{hideAdd}",\
            role: "form"},\
          remote: true,\
          data: {type: 'text'}\
          ) do |f|
        = f.hidden_field :apartment_id, value: @apartment.id
        = f.submit class: "favorite favorite-empty", value: "☆"
      = form_for(@favorite,\
          url: {controller: 'favorites', action: 'destroy_without_id'},\
          method: 'delete',\
          :html => {\
            class: "form-favorite form-invisibile form-remove-favorite #{hideRemove}",\
            role: "form"},\
          remote: true,\
          data: {type: 'text'}\
          ) do |f|
        = f.hidden_field :apartment_id, value: @apartment.id
        = f.submit class: "favorite favorite-full", value: "★"
dl.dl-horizontal
  dt
    | Title:
  dd
    = @apartment.title
  dt
    | Description:
  dd
    = @apartment.description
  dt
    | Cost:
  dd
    = @apartment.cost
    |&nbsp;
    = @apartment.currency
  dt
    | Deposit:
  dd
    = @apartment.deposit
    |&nbsp;
    = @apartment.currency
  dt
    | User:
  dd
    = @apartment.user.name
  dt
    | Males/Females:
  dd
    = get_sexes @apartment.males, @apartment.females
  dt
    | Address:
  dd
    = @apartment.address
    div style=("width: 200px;") 
      #map-apartments style=("width: 200px; height: 200px;")
    javascript:
      handler = Gmaps.build('Google');
      handler.buildMap({ provider: {center: new google.maps.LatLng(#{@apartment.latitude}, #{@apartment.longitude}), zoom: 12}, internal: {id: 'map-apartments'}}, function(){
        markers = handler.addMarkers([
          {
            "lat": #{@apartment.latitude},
            "lng": #{@apartment.longitude}
          }
        ]);
        // handler.bounds.extendWith(markers);
        // handler.fitMapToBounds();
      });
  dt
    | Created at:
  dd
    = @apartment.created_at.strftime('%Y-%m-%d')
  dt
    | From:
  dd
    = @apartment.from.strftime('%Y-%m-%d')
  dt
    | Until:
  dd
    = @apartment.until.strftime('%Y-%m-%d')
  dt
    | Male or female:
  dd
    = get_names_from_number(@apartment.male_or_female)
